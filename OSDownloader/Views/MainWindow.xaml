<ribbon:RibbonWindow x:Class="OSDownloader.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:osc="clr-namespace:OpenSourceControls"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:ribbon="clr-namespace:System.Windows.Controls.Ribbon;assembly=System.Windows.Controls.Ribbon" xmlns:OSDownloader="clr-namespace:OSDownloader" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:OSDownloader"
        xmlns:viewmodels="clr-namespace:OSDownloader.ViewModels"
        xmlns:views="clr-namespace:OSDownloader.Views"

        Title="OSDownloader" Height="700" Width="1270" MinWidth="770" MinHeight="500" Name="mainWindow" WindowStartupLocation="CenterScreen"
        Icon="/OSDownloader;component/Resources/download_icon.ico" KeyDown="mainWindow_KeyDown" 
        Closing="mainWindow_Closing" StateChanged="mainWindow_StateChanged" ContentRendered="mainWindow_ContentRendered"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <!--<ribbon:RibbonWindow.DataContext>
        <local:OSListManager /> 
        <x:Static Member="local:OSListManager.Instance" />
    </ribbon:RibbonWindow.DataContext>
    -->
    <ribbon:RibbonWindow.DataContext>
        <viewmodels:MainViewModel/>
    </ribbon:RibbonWindow.DataContext>
  

    <ribbon:RibbonWindow.Resources>

        <!-- Custom Colours -->
        <SolidColorBrush x:Key="CustomBaseBackgroundColor" Color="#FFF3F6FB" />
        <SolidColorBrush x:Key="CustomBaseTextColor" Color="#FF555555" />

        <!-- Declare Static Resources to be used to pass Boolean values as CommandParameters instead of just a string value-->
        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>

        <!-- ########################## STYLE DEFINITIONS ########################## -->
        <Style x:Key="RightHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>
        <Style x:Key="CenterHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="LeftCellStyle" TargetType="DataGridCell">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style.Setters>
        </Style>
        <Style x:Key="LeftCellSelectionDisabledStyle" TargetType="{x:Type DataGridCell}">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RightCellStyle" TargetType="DataGridCell">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Right" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style.Setters>
        </Style>
        <Style x:Key="CenterCellStyle" TargetType="DataGridCell">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style.Setters>
        </Style>
 
        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RibbonButtonStylePressedWhenDisabled" TargetType="{x:Type ribbon:RibbonButton}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{Binding Ribbon.PressedBackground, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="BorderBrush" Value="{Binding Ribbon.PressedBorderBrush, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <DataTemplate x:Name="PleaseWaitViewTemplate" DataType="{x:Type viewmodels:PleaseWaitViewModel}">
            <views:PleaseWait DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate x:Name="OSViewTemplate" DataType="{x:Type viewmodels:OSViewModel}">
            <views:OSView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate x:Name="DownloadsViewTemplate" DataType="{x:Type viewmodels:DownloadsViewModel}">
            <views:DownloadsView DataContext="{Binding}" />
        </DataTemplate>
    </ribbon:RibbonWindow.Resources>

    <DockPanel Name="dockPanel">

        <!-- ########################## TITLE BAR BEHAVIOUR: ICON AND MENU ########################## -->
<!--
        <tb:TaskbarIcon x:Name="XNotifyIcon" IconSource="/OSDownloader;component/Resources/download_icon.ico" ToolTipText="Disguise OS downloader" TrayLeftMouseUp="tcmShowMainWindow_Click">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show Main Window" Name="tcmShowMainWindow" Click="tcmShowMainWindow_Click" />
                    <Separator />
                    <MenuItem Header="Add New Download..." Name="tcmNewDownload" Click="btnAddToLibrary_Click" />
                    <MenuItem Header="Create Batch Download..." Name="tcmBatchDownload" Click="btnRemoveFromLibrary_Click" />
                    <Separator />
                    <MenuItem Header="Start All" Name="tcmStartAll" Click="cmStartAll_Click" />
                    <MenuItem Header="Pause All" Name="tcmPauseAll" Click="cmPauseAll_Click" />
                    <Separator />
                    <MenuItem Header="About..." Name="tcmAbout" Click="btnAbout_Click" />
                    <MenuItem Header="Exit" Name="tcmExit" Click="tcmExit_Click" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
-->
        <!-- ########################## TOP: RIBBON MENU HEADER ########################## -->

        <ribbon:Ribbon DockPanel.Dock="Top" ShowQuickAccessToolBarOnTop="False" Name="mainRibbon" Margin="0,0,0,0">
            <ribbon:Ribbon.ApplicationMenu>
                <ribbon:RibbonApplicationMenu Visibility="Collapsed" IsMainMenu="True" Name="ribbonMenu"></ribbon:RibbonApplicationMenu>
            </ribbon:Ribbon.ApplicationMenu>
            <ribbon:RibbonTab Header="Controls" Name="ribbonTabMain">
                <ribbon:RibbonGroup Header="Online Update" Name="APIGroup" Width="Auto">
                    <ribbon:RibbonButton Width ="80" Label="{Binding ApiUpdateButtonText}" Name="btnCheckForUpdates" Command="{Binding CheckForUpdatesCommand}" LargeImageSource="{Binding ApiUpdateButtonImage}" />
                </ribbon:RibbonGroup>
                <ribbon:RibbonGroup Header="Add/Remove OS" Name="AddRemoveGroup">
                    <ribbon:RibbonButton Label="Add OS" Name="btnAddToLibrary" Command="{Binding CenralPanelControlDataContext.AddOSToLibraryCommand}" LargeImageSource="/OSDownloader;component/Resources/addtocollection.png"/>
                    <ribbon:RibbonButton Label="Remove OS" Name="btnRemoveFromLibrary" Command="{Binding CenralPanelControlDataContext.RemoveOSFromLibraryCommand}" LargeImageSource="/OSDownloader;component/Resources/removefromcollection.png" />
                </ribbon:RibbonGroup>
                <ribbon:RibbonGroup Header="Downloads" Name="ProcessGroup">
                    <!-- <ribbon:RibbonButton Label="Start" Name="btnStart" Click="btn_osList_start_Click" IsEnabled="True" LargeImageSource="/OSDownloader;component/Resources/start.png" /> -->
                    <ribbon:RibbonButton Label="Start" Name="btnStart" Command="{Binding UnPauseDownloadsCommand}" LargeImageSource="/OSDownloader;component/Resources/start.png" />
                    <!-- <ribbon:RibbonButton Label="Pause" Name="btnPause" Click="btn_osList_pause_Click" IsEnabled="False" LargeImageSource="/OSDownloader;component/Resources/stop.png" /> -->
                    <ribbon:RibbonButton Label="Pause" Name="btnPause" Command="{Binding PauseDownloadsCommand}" LargeImageSource="/OSDownloader;component/Resources/stop.png" />
                </ribbon:RibbonGroup>
                <ribbon:RibbonGroup Header="View Mode" Name="ViewMode">
                    <ribbon:RibbonButton Label="OSses" Name="btnViewOSses" Style="{DynamicResource RibbonButtonStylePressedWhenDisabled}" Command="{Binding ToggleToDownloadsViewModeCommand}" CommandParameter="{StaticResource False}" LargeImageSource="/OSDownloader;component/Resources/viewosses.png" />
                    <ribbon:RibbonButton Label="Files" Name="btnViewDownloads" Style="{DynamicResource RibbonButtonStylePressedWhenDisabled}"  Command="{Binding ToggleToDownloadsViewModeCommand}" CommandParameter="{StaticResource True}" LargeImageSource="/OSDownloader;component/Resources/viewdownloads.png" />
                </ribbon:RibbonGroup>
                <ribbon:RibbonGroup Header="Settings" Name="SettingsGroup">
                    <ribbon:RibbonButton Label="Limit Bandwidth" Name="btnSetLimits" Command="{Binding ShowSettingsWindowCommand}" CommandParameter="tiLimits" FontSize="11" Margin="-3 0 -3 0" Padding="0" LargeImageSource="/OSDownloader;component/Resources/downloadspeed.png" />
                    <ribbon:RibbonButton Label="General Settings" Name="btnPreferences" Command="{Binding ShowSettingsWindowCommand}" CommandParameter="{x:Null}" LargeImageSource="/OSDownloader;component/Resources/settings.png" />
                </ribbon:RibbonGroup>
                <!--
                <ribbon:RibbonGroup Header="Show" Name="ShowGroup">
                    <ribbon:RibbonCheckBox Label="Grid" Name="cbShowGrid" VerticalContentAlignment="Center" Margin="0,2,0,0" Click="cbShowGrid_Click" Height="Auto" />
                    <ribbon:RibbonCheckBox Label="Properties" Name="cbShowProperties" VerticalContentAlignment="Center" Margin="0,2,0,0" IsChecked="True" Click="cbShowProperties_Click" Height="Auto" />
                    <ribbon:RibbonCheckBox Label="Status Bar" Name="cbShowStatusBar" VerticalContentAlignment="Center" Margin="0,2,0,0" IsChecked="True" Click="cbShowStatusBar_Click" Height="Auto" />
                </ribbon:RibbonGroup>
                -->
                <ribbon:RibbonGroup Header="Info" Name="InfoGroup" Margin="1">
                    <ribbon:RibbonButton Label="About" Name="btnAbout" Command="{Binding ShowAboutWindowCommand}" LargeImageSource="/OSDownloader;component/Resources/about.png" />
                </ribbon:RibbonGroup>
                <!--
                <ribbon:RibbonGroup Header="DEBUG Old Buttons" Name="OldButtonGroup">
                    <ribbon:RibbonButton IsEnabled="False" Label="Add Download" Name="btnOldAddDownloadButton" Click="btnOldAddDownloadButton_Click" LargeImageSource="/OSDownloader;component/Resources/new.png" />
                    <ribbon:RibbonButton IsEnabled="False" Label="Batch Add" Name="btnOldBatchAddButton" Click="btnOldBatchAddButton_Click" LargeImageSource="/OSDownloader;component/Resources/batch.png" />
                </ribbon:RibbonGroup>
                -->
            </ribbon:RibbonTab>
        </ribbon:Ribbon>

        <!-- ########################## BOTTOM: STATUS BAR ########################## -->

        <StatusBar Height="26" DockPanel.Dock="Bottom" Name="statusBar" VerticalContentAlignment="Center" Background="#FFDFE9F5" Foreground="#555555" BorderBrush="#FFB9C9DA" BorderThickness="1">
            <StatusBarItem Name="statusBarDownloads" Content="Ready" Padding="8,3,8,3" Width="60"/>
            <Separator/>
            <StatusBarItem Name="statusBarActiveDownloads" Content="{Binding StatusBarActiveDownloadsText}" Padding="8,3,8,3" Width="130" />
            <Separator/>
            <StatusBarItem Name="statusBarCompleted" Content="{Binding StatusBarCompletedDownloadsText}" Padding="8,3,8,3" Width="157" />
            <Separator/>
            <StatusBarItem />
        </StatusBar>

        <!-- ########################## MIDDLE : MAIN CONTENT ########################## -->
        <DockPanel DockPanel.Dock="Left" Name="PagePanel_OSses" Visibility="Visible" Margin="0" Background="Yellow">
            <ContentControl DataContext="{Binding CenralPanelControlDataContext}"  Content="{Binding }" />
        </DockPanel>
    </DockPanel>
</ribbon:RibbonWindow>