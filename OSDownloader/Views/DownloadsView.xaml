<UserControl x:Class="OSDownloader.Views.DownloadsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:osc="clr-namespace:OpenSourceControls"
             xmlns:local="clr-namespace:OSDownloader.Views"
             xmlns:viewmodels="clr-namespace:OSDownloader.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance viewmodels:DownloadsViewModel}">

    <UserControl.Resources>

        <!-- CUstom Colours -->
        <SolidColorBrush x:Key="CustomBaseBackgroundColor" Color="#FFF9FAFC" />
        <SolidColorBrush x:Key="CustomBaseTextColor" Color="#FF333333" />
        
        <!-- Define your styles first -->
        <Style x:Key="RightHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>
        <Style x:Key="CenterHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="LeftCellStyle" TargetType="DataGridCell">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style.Setters>
        </Style>
        <Style x:Key="LeftCellSelectionDisabledStyle" TargetType="{x:Type DataGridCell}">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RightCellStyle" TargetType="DataGridCell">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Right" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style.Setters>
        </Style>
        <Style x:Key="CenterCellStyle" TargetType="DataGridCell">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style.Setters>
        </Style>

        <Style x:Key="OSGridStyle" TargetType="DataGridRow">
            <Setter Property="Margin" Value="2 0 2 0" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Blue" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Margin" Value="1 -2 1 0" />
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding StatusString}" Value="To Be Added"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Foreground" Value="#8c8c1d" />
                        <Setter Property="Background" Value="#f8f8dd" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding StatusString}" Value="To Be Added"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Foreground" Value="#3a3a0c" />
                        <Setter Property="Background" Value="#ececa3" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding StatusString}" Value="Not In Library"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Foreground" Value="#627ccb" />
                        <Setter Property="Background" Value="#f9fafd" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding StatusString}" Value="Not In Library"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Foreground" Value="#324b97" />
                        <Setter Property="Background" Value="#e6eaf7" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding StatusString}" Value="NOT VALID"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Foreground" Value="#979191" />
                        <Setter Property="Background" Value="#FFDDDD" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding StatusString}" Value="NOT VALID"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Foreground" Value="#7a7373" />
                        <Setter Property="Background" Value="#ff7e7e" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <DockPanel Background="#FFF9F9F9" Name="OSListViewMainPanel">
        <DockPanel DockPanel.Dock="Bottom" Background="#FFF9F9F9" Name="propertiesPanel" Height="200">
            <StatusBar Height="26" Name="propertiesBar" DockPanel.Dock="Top" VerticalContentAlignment="Center" Background="#FFDFE9F5" BorderBrush="#FFB9C9DA" BorderThickness="1">
                <StatusBarItem  Name="propertiesItem" Content="Properties" Margin="0" Padding="10,3,3,3" />
            </StatusBar>
            <DataGrid Name="dataGrid_DownloadProperties" AutoGenerateColumns="False" GridLinesVisibility="None" CanUserResizeRows="False" MinRowHeight="22" RowBackground="#FFF9F9F9" 
                      VerticalContentAlignment="Center" BorderThickness="0" IsReadOnly="True" SelectionUnit="FullRow" SelectionMode="Single" CanUserResizeColumns="True" Background="#FFF9F9F9" HorizontalAlignment="Stretch"
                      ItemsSource="{Binding SelectedDownloadPropertiesList}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" CellStyle="{StaticResource LeftCellSelectionDisabledStyle}" Binding="{Binding Name, Mode=OneWay}" MinWidth="110" Width="200" x:Name="textColumn_Properties_Name" />
                    <DataGridTextColumn Header="Value" CellStyle="{StaticResource LeftCellSelectionDisabledStyle}" Binding="{Binding Value, Mode=OneWay}" MinWidth="450" Width="*" x:Name="textColumn_Properties_Value" />
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>

        <osc:DockPanelSplitter x:Name="propertiesSplitter" DockPanel.Dock="Bottom" Background="#FFB9C9DA" BorderThickness="2" BorderBrush="#FFDFE9F5" Height="6" Thickness="6" />

        <DockPanel DockPanel.Dock="Top" Name="downloadsPanel" Background="#FFF9F9F9">
            <!--<DataGrid AutoGenerateColumns="False" Name="downloadsGrid" VerticalContentAlignment="Center" DockPanel.Dock="Top" 
                                    BorderThickness="0" IsReadOnly="True" GridLinesVisibility="None" MinRowHeight="22" RowBackground="#FFF9F9F9"
                                    MouseDoubleClick="cmOpenFile_Click" SelectionChanged="downloadsGrid_SelectionChanged" PreviewMouseWheel="downloadsGrid_PreviewMouseWheel" 
                                    Background="#FFF9F9F9" HorizontalGridLinesBrush="#FFCBCBCB" VerticalGridLinesBrush="#FFCBCBCB" KeyUp="downloadsGrid_KeyUp" 
                                    ContextMenuOpening="downloadsGrid_ContextMenuOpening" CanUserResizeRows="False">-->
            <DataGrid AutoGenerateColumns="False" Name="dataGrid_downloadsGrid" VerticalContentAlignment="Center" DockPanel.Dock="Top" 
                                BorderThickness="0" IsReadOnly="True" MinRowHeight="22" RowBackground="#FFF9F9F9"
                                SelectionChanged="downloadsGrid_SelectionChanged" CanUserResizeRows="False" SelectionUnit="FullRow" SelectionMode="Single"
                                Background="#FFF9F9F9" HorizontalGridLinesBrush="#FFCBCBCB" VerticalGridLinesBrush="#FFCBCBCB" GridLinesVisibility="None" ItemsSource="{Binding DownloadsList}" >

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Start" Name="cmStart"   />
                        <MenuItem Header="Pause" Name="cmPause"  />
                        <Separator />
                        <MenuItem Header="Delete" Name="cmDelete" />
                        <MenuItem Header="Restart" Name="cmRestart" />
                        <Separator />
                        <MenuItem Header="Open File" Name="cmOpenFile" />
                        <MenuItem Header="Open Download Folder" Name="cmOpenDownloadFolder"/>
                        <Separator />
                        <MenuItem Header="Start All" Name="cmStartAll"/>
                        <MenuItem Header="Pause All" Name="cmPauseAll" />
                        <MenuItem Header="Select All" Name="cmSelectAll" />
                        <Separator />
                        <MenuItem Header="Copy URL to Clipboard" Name="cmCopyURLtoClipboard" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="File Name" CellStyle="{StaticResource LeftCellStyle}" MinWidth="150" Width="150" x:Name="tcFileName" Binding="{Binding FileName, Mode=OneWay}" />
                    <DataGridTextColumn Header="Size" HeaderStyle="{StaticResource RightHeaderStyle}" CellStyle="{StaticResource RightCellStyle}" MinWidth="80" Width="80" x:Name="tcSize" Binding="{Binding FileSizeString, Mode=OneWay}" />
                    <DataGridTextColumn Header="Downloaded" HeaderStyle="{StaticResource RightHeaderStyle}" CellStyle="{StaticResource RightCellStyle}" MinWidth="80" Width="80" x:Name="tcDownloaded" Binding="{Binding DownloadedSizeString, Mode=OneWay}" />
                    <DataGridTextColumn Header="Percent" HeaderStyle="{StaticResource RightHeaderStyle}" CellStyle="{StaticResource RightCellStyle}" MinWidth="55" Width="55" x:Name="tcPercent" Binding="{Binding PercentString, Mode=OneWay}" />
                    <DataGridTemplateColumn Header="Progress" HeaderStyle="{StaticResource CenterHeaderStyle}" CellStyle="{StaticResource CenterCellStyle}" MinWidth="130" Width="130" x:Name="tcProgress">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ProgressBar Name="progressBar" Value="{Binding Progress, Mode=OneWay}" VerticalAlignment="Center" Height="16" MinHeight="16" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Speed" HeaderStyle="{StaticResource RightHeaderStyle}" CellStyle="{StaticResource RightCellStyle}" MinWidth="85" Width="85" x:Name="tcSpeed" Binding="{Binding DownloadSpeed, Mode=OneWay}" />
                    <DataGridTextColumn Header="Time Left" HeaderStyle="{StaticResource RightHeaderStyle}" CellStyle="{StaticResource RightCellStyle}" MinWidth="70" Width="70" x:Name="tcTimeLeft" Binding="{Binding TimeLeft, Mode=OneWay}" />
                    <DataGridTextColumn Header="Status" CellStyle="{StaticResource LeftCellStyle}" MinWidth="95" Width="95" x:Name="tcStatus" Binding="{Binding StatusString, Mode=OneWay}" />
                    <DataGridTextColumn Header="Added On" HeaderStyle="{StaticResource CenterHeaderStyle}" CellStyle="{StaticResource CenterCellStyle}" MinWidth="130" Width="130" x:Name="tcAddedOn" Binding="{Binding AddedOnString, Mode=OneWay}" />
                    <DataGridTextColumn Header="Completed On" HeaderStyle="{StaticResource CenterHeaderStyle}" CellStyle="{StaticResource CenterCellStyle}" MinWidth="130" Width="130" x:Name="tcCompletedOn" Binding="{Binding CompletedOnString, Mode=OneWay}" />
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
        
    </DockPanel>
</UserControl>
